{"ast":null,"code":"import service from '../../data/service/service.json';\nimport category from '../../data/category.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let ServiceHelperService = /*#__PURE__*/(() => {\n  class ServiceHelperService {\n    constructor(route) {\n      this.route = route;\n      // pagination\n      this.page = 1;\n      // Service\n      this.serviceblock = service;\n      this.servicedetails = service;\n      // Category\n      this.category = category;\n      this.servicecategory = category;\n      // Social Share\n      this.pageUrl = window.location.href;\n    }\n    // Category\n    getCategories(items) {\n      var elems = category.filter(item => {\n        return items.includes(item.id);\n      });\n      return elems;\n    }\n    // Count Category\n    setCategoriesCount() {\n      for (var i = 0; i < this.servicecategory.length; i++) {\n        var count = this.serviceblock.filter(item => {\n          return item.category.includes(parseInt(this.servicecategory[i].id));\n        });\n        count = count.length;\n        this.servicecategory[i].count = count;\n      }\n    }\n    // Service Details\n    getService(id) {\n      this.servicedetails = service.filter(item => {\n        return item.id == id;\n      });\n    }\n    // Recent service\n    changeToMonth(month) {\n      var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      return months[month];\n    }\n    setDemoDate() {\n      var today = new Date();\n      this.serviceblock.slice(0, 3).map(service => (service.timestamp = today.getTime(),\n      // Remove this date on your live demo. This is only used for preview purposed. Your date should actually be updated\n      // in the service.json object\n      service.servicedate = `${this.changeToMonth(today.getMonth())} ${today.getDate()}, ${today.getFullYear()}`));\n    }\n    getRecentService() {\n      var elems = service.filter(service => {\n        return service.timestamp > new Date(service.servicedate);\n      });\n      return elems;\n    }\n    // Category Filter\n    setCategory(id) {\n      this.servicecategory = id;\n    }\n    getCategory() {\n      return this.servicecategory;\n    }\n    getServicesByCategory(catId) {\n      return this.serviceblock = service.filter(item => {\n        return item.category.includes(parseInt(catId));\n      });\n    }\n    // Fetch All filter\n    setServices() {\n      var servicesByCategory = this.getCategory() != undefined ? this.getServicesByCategory(this.getCategory()) : '';\n      if ((servicesByCategory != '' || servicesByCategory != undefined || servicesByCategory != null) && servicesByCategory.length > 0) {\n        this.serviceblock = servicesByCategory;\n      }\n    }\n    ngAfterContentInit() {\n      this.setCategory(this.route.snapshot.params.catId);\n      this.setServices();\n      this.getService(this.route.snapshot.params.id);\n    }\n    ngOnInit() {\n      this.setCategoriesCount();\n      this.setDemoDate();\n    }\n    socialShare(title) {\n      var socialIcons = [{\n        title: \"facebook\",\n        iconClass: \"fab fa-facebook-f\",\n        iconStyle: \"fb\",\n        link: \"https://www.facebook.com/sharer/sharer.php?u=\" + encodeURIComponent(this.pageUrl) + \"\"\n      }, {\n        title: \"twitter\",\n        iconClass: \"fab fa-twitter\",\n        iconStyle: \"tw\",\n        link: \"http://twitter.com/intent/tweet?text=\" + encodeURIComponent(title) + \"&\" + encodeURIComponent(this.pageUrl) + \"\"\n      }, {\n        title: \"linkedin\",\n        iconClass: \"fab fa-linkedin-in\",\n        iconStyle: \"ln\",\n        link: \"https://www.linkedin.com/shareArticle?mini=true&url=\" + encodeURIComponent(this.pageUrl) + \"&title=\" + encodeURIComponent(title) + \"\"\n      }, {\n        title: \"pinterest\",\n        iconClass: \"fab fa-pinterest-p\",\n        iconStyle: \"gg\",\n        link: \"http://pinterest.com/pin/create/button/?url=\" + encodeURIComponent(this.pageUrl) + \"\"\n      }];\n      return socialIcons;\n    }\n    openSocialPopup(social) {\n      window.open(social.link, \"MsgWindow\", \"width=600,height=600\");\n    }\n  }\n  ServiceHelperService.ɵfac = function ServiceHelperService_Factory(t) {\n    return new (t || ServiceHelperService)(i0.ɵɵinject(i1.ActivatedRoute));\n  };\n  ServiceHelperService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ServiceHelperService,\n    factory: ServiceHelperService.ɵfac,\n    providedIn: 'root'\n  });\n  return ServiceHelperService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}